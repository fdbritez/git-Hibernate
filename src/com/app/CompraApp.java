/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.app;

import com.entidad.*;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import util.HibernateUtil;

/**
 *
 * @author fdbritez
 * 505, 332
 * 505,180
 * 
 */
public final class CompraApp extends javax.swing.JDialog {
   private Session st;
    private DefaultTableModel model;
    private DefaultTableModel modelproveedor;
    private DefaultTableModel modelArticulo;
    private DefaultTableModel modelArticuloTodos;
    private int numCompra, var,idArtt;//Variables de clase auxiliares necesarias.
    /**
     * Creates new form CompraApp
     */
    public CompraApp(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
         this.hibernateSession();
         this.arranque();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_id_compraCab = new javax.swing.JTextField();
        txt_fecha = new javax.swing.JTextField();
        txt_hora = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanelDatosFuncionarios = new javax.swing.JPanel();
        bt_agregar = new javax.swing.JButton();
        txt_apellido_funcionario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_nombre_funcionario = new javax.swing.JTextField();
        txt_id_funcionario = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanelBuscadorPorNombre = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txt_buscadorPorNombreFuncionario = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanelDatosProveedor = new javax.swing.JPanel();
        bt_agregar_proveedor = new javax.swing.JButton();
        txt_direccion_proveedor = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_nombre_proveedor = new javax.swing.JTextField();
        txt_id_proveedor = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanelBuscadorPorNombreProveedor = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txt_buscadorPorNombreProveedor = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanelTablaArticulo = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        txt_BuscarPorDescripcion = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanelDatosArticulos = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_id_articulo = new javax.swing.JTextField();
        txt_descripcion = new javax.swing.JTextField();
        txt_precio_de_compra = new javax.swing.JTextField();
        txt_can = new javax.swing.JTextField();
        txt_cantidad = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();
        bt_buscarArticulo = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        bt_eliminar = new javax.swing.JButton();
        bt_agregar_todos = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableListarTodos = new javax.swing.JTable();
        bt_nuevo = new javax.swing.JButton();
        bt_guardar = new javax.swing.JButton();
        bt_cancelar = new javax.swing.JButton();
        txt_generalTotal = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/buy.png"))); // NOI18N
        jLabel1.setText("FORMULARIO DE COMPRAS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("NÃºmero");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Fecha");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Hora");

        txt_id_compraCab.setBackground(new java.awt.Color(153, 153, 153));
        txt_id_compraCab.setEditable(false);
        txt_id_compraCab.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_id_compraCab.setForeground(new java.awt.Color(0, 0, 255));
        txt_id_compraCab.setToolTipText("");
        txt_id_compraCab.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_id_compraCab.setCaretColor(new java.awt.Color(51, 51, 255));
        txt_id_compraCab.setSelectedTextColor(new java.awt.Color(0, 0, 255));
        txt_id_compraCab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_id_compraCabActionPerformed(evt);
            }
        });

        txt_fecha.setBackground(new java.awt.Color(153, 153, 153));
        txt_fecha.setEditable(false);
        txt_fecha.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_fecha.setForeground(new java.awt.Color(0, 0, 255));
        txt_fecha.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txt_hora.setBackground(new java.awt.Color(153, 153, 153));
        txt_hora.setEditable(false);
        txt_hora.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_hora.setForeground(new java.awt.Color(0, 0, 255));
        txt_hora.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_hora.setCaretColor(new java.awt.Color(0, 0, 255));
        txt_hora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_horaActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(505, 180));

        jPanelDatosFuncionarios.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bt_agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Search (2).png"))); // NOI18N
        bt_agregar.setText("Buscar");
        bt_agregar.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        bt_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_agregarActionPerformed(evt);
            }
        });

        jLabel7.setText("APELLIDO:");

        jLabel6.setText("NOMBRE:");

        jLabel5.setText("ID:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("DATOS DEL FUNCIONARIOS");

        javax.swing.GroupLayout jPanelDatosFuncionariosLayout = new javax.swing.GroupLayout(jPanelDatosFuncionarios);
        jPanelDatosFuncionarios.setLayout(jPanelDatosFuncionariosLayout);
        jPanelDatosFuncionariosLayout.setHorizontalGroup(
            jPanelDatosFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosFuncionariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosFuncionariosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosFuncionariosLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel5))
                            .addComponent(jLabel7)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosFuncionariosLayout.createSequentialGroup()
                                .addComponent(txt_id_funcionario, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(jLabel20)
                                .addGap(0, 118, Short.MAX_VALUE))
                            .addGroup(jPanelDatosFuncionariosLayout.createSequentialGroup()
                                .addGroup(jPanelDatosFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_nombre_funcionario)
                                    .addComponent(txt_apellido_funcionario))
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosFuncionariosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_agregar)
                        .addContainerGap())))
        );
        jPanelDatosFuncionariosLayout.setVerticalGroup(
            jPanelDatosFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosFuncionariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_id_funcionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGroup(jPanelDatosFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosFuncionariosLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanelDatosFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_nombre_funcionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosFuncionariosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_apellido_funcionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bt_agregar)
                .addGap(35, 35, 35))
        );

        jPanelBuscadorPorNombre.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelBuscadorPorNombre.setPreferredSize(new java.awt.Dimension(495, 153));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Nombre Y Apellido"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel8.setText("POR NOMBRE:");

        txt_buscadorPorNombreFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscadorPorNombreFuncionarioActionPerformed(evt);
            }
        });
        txt_buscadorPorNombreFuncionario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_buscadorPorNombreFuncionarioKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBuscadorPorNombreLayout = new javax.swing.GroupLayout(jPanelBuscadorPorNombre);
        jPanelBuscadorPorNombre.setLayout(jPanelBuscadorPorNombreLayout);
        jPanelBuscadorPorNombreLayout.setHorizontalGroup(
            jPanelBuscadorPorNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscadorPorNombreLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBuscadorPorNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBuscadorPorNombreLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_buscadorPorNombreFuncionario))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelBuscadorPorNombreLayout.setVerticalGroup(
            jPanelBuscadorPorNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscadorPorNombreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBuscadorPorNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_buscadorPorNombreFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelDatosFuncionarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBuscadorPorNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDatosFuncionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBuscadorPorNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(505, 332));

        jPanelDatosProveedor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelDatosProveedor.setPreferredSize(new java.awt.Dimension(464, 163));

        bt_agregar_proveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Search (2).png"))); // NOI18N
        bt_agregar_proveedor.setText("Buscar");
        bt_agregar_proveedor.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bt_agregar_proveedor.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        bt_agregar_proveedor.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bt_agregar_proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_agregar_proveedorActionPerformed(evt);
            }
        });

        jLabel9.setText("DIRECCION:");

        jLabel10.setText("NOMBRE:");

        jLabel11.setText("ID:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("DATOS DE LOS PROVEEDORES");

        javax.swing.GroupLayout jPanelDatosProveedorLayout = new javax.swing.GroupLayout(jPanelDatosProveedor);
        jPanelDatosProveedor.setLayout(jPanelDatosProveedorLayout);
        jPanelDatosProveedorLayout.setHorizontalGroup(
            jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosProveedorLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel11))
                    .addComponent(jLabel9)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_direccion_proveedor)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosProveedorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_agregar_proveedor))
                    .addGroup(jPanelDatosProveedorLayout.createSequentialGroup()
                        .addComponent(txt_id_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel21)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txt_nombre_proveedor))
                .addContainerGap())
        );
        jPanelDatosProveedorLayout.setVerticalGroup(
            jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txt_id_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombre_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(1, 1, 1)
                .addGroup(jPanelDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(txt_direccion_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_agregar_proveedor)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanelBuscadorPorNombreProveedor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelBuscadorPorNombreProveedor.setPreferredSize(new java.awt.Dimension(495, 153));

        jLabel12.setText("POR NOMBRE:");

        txt_buscadorPorNombreProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscadorPorNombreProveedorActionPerformed(evt);
            }
        });
        txt_buscadorPorNombreProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_buscadorPorNombreProveedorKeyPressed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "NOMBRE", "DIRECCION"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanelBuscadorPorNombreProveedorLayout = new javax.swing.GroupLayout(jPanelBuscadorPorNombreProveedor);
        jPanelBuscadorPorNombreProveedor.setLayout(jPanelBuscadorPorNombreProveedorLayout);
        jPanelBuscadorPorNombreProveedorLayout.setHorizontalGroup(
            jPanelBuscadorPorNombreProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscadorPorNombreProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBuscadorPorNombreProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBuscadorPorNombreProveedorLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_buscadorPorNombreProveedor)
                        .addGap(10, 10, 10))
                    .addGroup(jPanelBuscadorPorNombreProveedorLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanelBuscadorPorNombreProveedorLayout.setVerticalGroup(
            jPanelBuscadorPorNombreProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuscadorPorNombreProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBuscadorPorNombreProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txt_buscadorPorNombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelDatosProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanelBuscadorPorNombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDatosProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBuscadorPorNombreProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setMaximumSize(new java.awt.Dimension(615, 150));
        jPanel3.setMinimumSize(new java.awt.Dimension(615, 75));
        jPanel3.setPreferredSize(new java.awt.Dimension(770, 175));

        jPanelTablaArticulo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelTablaArticulo.setMaximumSize(new java.awt.Dimension(615, 150));
        jPanelTablaArticulo.setMinimumSize(new java.awt.Dimension(615, 150));
        jPanelTablaArticulo.setPreferredSize(new java.awt.Dimension(615, 150));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "DESCRIPCION", "CANTIDAD", "PRECIO DE COMPRA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setMaximumSize(new java.awt.Dimension(60, 64));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        txt_BuscarPorDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_BuscarPorDescripcionKeyPressed(evt);
            }
        });

        jLabel19.setText("POR DESCRIPCION");

        javax.swing.GroupLayout jPanelTablaArticuloLayout = new javax.swing.GroupLayout(jPanelTablaArticulo);
        jPanelTablaArticulo.setLayout(jPanelTablaArticuloLayout);
        jPanelTablaArticuloLayout.setHorizontalGroup(
            jPanelTablaArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaArticuloLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTablaArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTablaArticuloLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_BuscarPorDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanelTablaArticuloLayout.setVerticalGroup(
            jPanelTablaArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaArticuloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTablaArticuloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txt_BuscarPorDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(6, Short.MAX_VALUE))
        );

        jPanelDatosArticulos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelDatosArticulos.setMaximumSize(new java.awt.Dimension(615, 145));
        jPanelDatosArticulos.setMinimumSize(new java.awt.Dimension(615, 145));
        jPanelDatosArticulos.setPreferredSize(new java.awt.Dimension(615, 145));

        jLabel13.setText("ID:");

        jLabel14.setText("DESCRIPCION:");

        jLabel15.setText("PRECIO COMPRA:");

        jLabel16.setText("STOCK:");

        jLabel17.setText("CANTIDAD:");

        txt_cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cantidadKeyPressed(evt);
            }
        });

        jLabel18.setText("TOTAL:");

        bt_buscarArticulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Search (2).png"))); // NOI18N
        bt_buscarArticulo.setText("Buscar");
        bt_buscarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscarArticuloActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("DATOS DE LOS ARTICULOS");

        javax.swing.GroupLayout jPanelDatosArticulosLayout = new javax.swing.GroupLayout(jPanelDatosArticulos);
        jPanelDatosArticulos.setLayout(jPanelDatosArticulosLayout);
        jPanelDatosArticulosLayout.setHorizontalGroup(
            jPanelDatosArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bt_buscarArticulo)
                .addGap(36, 36, 36))
            .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                .addGroup(jPanelDatosArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanelDatosArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(12, 12, 12)
                                .addComponent(txt_id_articulo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(155, 155, 155)
                                .addComponent(jLabel22))
                            .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(9, 9, 9)
                                .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24))))
                    .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_precio_de_compra, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_can, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_total, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)))
                .addContainerGap(251, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelDatosArticulosLayout.setVerticalGroup(
            jPanelDatosArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                .addGroup(jPanelDatosArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanelDatosArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(txt_id_articulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelDatosArticulosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel22)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(jPanelDatosArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txt_precio_de_compra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosArticulosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txt_can, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosArticulosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bt_buscarArticulo)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelDatosArticulos, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE)
                    .addComponent(jPanelTablaArticulo, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDatosArticulos, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelTablaArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bt_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Trashcan_empty.png"))); // NOI18N
        bt_eliminar.setText("ELIMINAR");
        bt_eliminar.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_eliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_eliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminarActionPerformed(evt);
            }
        });

        bt_agregar_todos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/add.png"))); // NOI18N
        bt_agregar_todos.setText("AGREGAR");
        bt_agregar_todos.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_agregar_todos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_agregar_todos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_agregar_todos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_agregar_todosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(bt_agregar_todos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bt_eliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bt_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_agregar_todos, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTableListarTodos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "ARTICULO", "PRECIO DE COMPRA", "CANTIDAD", " SUB TOTAL"
            }
        ));
        jScrollPane4.setViewportView(jTableListarTodos);

        bt_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/New.png"))); // NOI18N
        bt_nuevo.setText("Nuevo");
        bt_nuevo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_nuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_nuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_nuevoActionPerformed(evt);
            }
        });

        bt_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Save.png"))); // NOI18N
        bt_guardar.setText("Guardar");
        bt_guardar.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_guardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_guardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_guardarActionPerformed(evt);
            }
        });

        bt_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/cancel32.png"))); // NOI18N
        bt_cancelar.setText("Cancelar");
        bt_cancelar.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_cancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_cancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cancelarActionPerformed(evt);
            }
        });

        txt_generalTotal.setBackground(new java.awt.Color(153, 153, 153));
        txt_generalTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txt_generalTotal.setForeground(new java.awt.Color(0, 51, 255));
        txt_generalTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_generalTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel23.setText("TOTAL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel2)
                                .addGap(67, 67, 67)
                                .addComponent(jLabel3)
                                .addGap(69, 69, 69)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_id_compraCab, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_hora, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(bt_nuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt_guardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bt_cancelar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabel23)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txt_generalTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_id_compraCab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel23)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_generalTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bt_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_nuevo)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_id_compraCabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_id_compraCabActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_id_compraCabActionPerformed

    private void txt_horaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_horaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_horaActionPerformed

    private void bt_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_agregarActionPerformed
      this.agregar();
     
    }//GEN-LAST:event_bt_agregarActionPerformed

    private void txt_buscadorPorNombreFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscadorPorNombreFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscadorPorNombreFuncionarioActionPerformed

    private void txt_buscadorPorNombreFuncionarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscadorPorNombreFuncionarioKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
         this.cargarTablaFuncionario();
            try{
                 if(this.txt_buscadorPorNombreFuncionario.getText().isEmpty()){
                     JOptionPane.showMessageDialog(null,"Debes rellenar el campo buscar por Descripcion");
                    this.txt_buscadorPorNombreFuncionario.requestFocus();
                   // this.limpiarCampofuncionario();
               }else{
                    this.limpiartablaFuncionario();
                     this.buscadorPorNombreFuncionarioTabla();
                }    

              
       }catch(Exception e){
           
       }
      }
        
    }//GEN-LAST:event_txt_buscadorPorNombreFuncionarioKeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       this.obtenerFuncionaro();
       this.jPanelBuscadorPorNombre.setVisible(false);
       this.bt_agregar.setEnabled(true);
       this.jPanelDatosFuncionarios.setVisible(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void bt_agregar_proveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_agregar_proveedorActionPerformed
      
        this.agregar_proveedor();
    }//GEN-LAST:event_bt_agregar_proveedorActionPerformed

    private void txt_buscadorPorNombreProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscadorPorNombreProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscadorPorNombreProveedorActionPerformed

    private void txt_buscadorPorNombreProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscadorPorNombreProveedorKeyPressed
       if(evt.getKeyCode()== KeyEvent.VK_ENTER){
         this.cargarTablaProveedor();
            try{
                 if(this.txt_buscadorPorNombreProveedor.getText().isEmpty()){
                     JOptionPane.showMessageDialog(null,"Debes rellenar el campo buscar por Nombre del Proveedor");
                    this.txt_buscadorPorNombreProveedor.requestFocus();
                   // this.limpiarCampofuncionario();
               }else{
                    this.limpiartablaProveedor();
                    this.buscadorPorNombreProveedorTabla();
                }    

              
       }catch(Exception e){
           
       }
      }
    }//GEN-LAST:event_txt_buscadorPorNombreProveedorKeyPressed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
       this.cargarProveedor();
       this.jPanelBuscadorPorNombreProveedor.setVisible(false);
       this.bt_agregar_proveedor.setEnabled(true);
       this.jPanelDatosProveedor.setVisible(true);
    }//GEN-LAST:event_jTable2MouseClicked

    private void bt_agregar_todosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_agregar_todosActionPerformed
        this.agregar_a_tabla();
    }//GEN-LAST:event_bt_agregar_todosActionPerformed

    private void bt_buscarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscarArticuloActionPerformed
        this.agregar_articulo();
        
      
    }//GEN-LAST:event_bt_buscarArticuloActionPerformed

    private void txt_BuscarPorDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_BuscarPorDescripcionKeyPressed
      if(evt.getKeyCode()== KeyEvent.VK_ENTER){
         this.cargarTablaArticulo();
            try{
                 if(this.txt_BuscarPorDescripcion.getText().isEmpty()){
                     JOptionPane.showMessageDialog(null,"Debes rellenar el campo buscar por Nombre del Articulo");
                    this.txt_BuscarPorDescripcion.requestFocus();
                  
               }else{
                    this.limpiartablaArticulo();
                    this.buscarArticulo();
                }    

              
       }catch(Exception e){
           
       }
      }
    }//GEN-LAST:event_txt_BuscarPorDescripcionKeyPressed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        this.obtenerArticulo();
        this.jPanelTablaArticulo.setVisible(false);
      // this.jPanelBuscadorPorNombreProveedor.setVisible(false);
       this.bt_buscarArticulo.setEnabled(true);
       this.jPanelDatosArticulos.setVisible(true);
        this.txt_cantidad.setEnabled(true);
        this.txt_cantidad.requestFocus();
      
    }//GEN-LAST:event_jTable3MouseClicked

    private void bt_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_nuevoActionPerformed
       this.nuevo();
      
    }//GEN-LAST:event_bt_nuevoActionPerformed

    private void bt_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cancelarActionPerformed
      this.arranque();
      this.jPanelDatosFuncionarios.setVisible(true);
      this.jPanelDatosArticulos.setVisible(true);
      this.jPanelDatosProveedor.setVisible(true);
      
    }//GEN-LAST:event_bt_cancelarActionPerformed

    private void txt_cantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cantidadKeyPressed
        //Uso del Evento KeyPressed dentro del campo de texto "cantidad".
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            calcularParcial();
            
            
        }
    }//GEN-LAST:event_txt_cantidadKeyPressed

    private void bt_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminarActionPerformed
       this.eliminar();
    }//GEN-LAST:event_bt_eliminarActionPerformed

    private void bt_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_guardarActionPerformed
      this.guardar();
    }//GEN-LAST:event_bt_guardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompraApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompraApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompraApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompraApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                CompraApp dialog = new CompraApp(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
   
    private void  hibernateSession(){
        st=HibernateUtil.getSessionFactory().openSession();
        
    }
    
    public void arranque(){
        // Funcionario
        this.txt_id_funcionario.setEnabled(false);
        this.txt_apellido_funcionario.setEnabled(false);
        this.txt_nombre_funcionario.setEnabled(false);
        
        this.txt_id_funcionario.setText(null);
        this.txt_apellido_funcionario.setText(null);
        this.txt_nombre_funcionario.setText(null);
       
        this.txt_id_compraCab.setEnabled(false);
        this.txt_fecha.setEnabled(false);
        this.txt_hora.setEnabled(false);
        
        defaultTableModelFuncionario();
        cargarTablaFuncionario();
        this.jPanelBuscadorPorNombre.setVisible(false);
        //Fin Funcionario
        this.txt_id_proveedor.setEnabled(false);
        this.txt_nombre_proveedor.setEnabled(false);
        this.txt_direccion_proveedor.setEnabled(false);
        this.txt_id_proveedor.setText(null);
        this.txt_nombre_proveedor.setText(null);
        this.txt_direccion_proveedor.setText(null);
        
        this.jPanelBuscadorPorNombreProveedor.setVisible(false);
        this.defaultTableModelProveedor();
        this.cargarTablaProveedor();
        
        this.defaultTableModelArticulo();
        this.cargarTablaArticulo();
             
        this.txt_id_articulo.setEnabled(false);
        this.txt_descripcion.setEnabled(false);
        this.txt_cantidad.setEnabled(false);
        this.txt_can.setEnabled(false);
        this.txt_precio_de_compra.setEnabled(false);
        this.txt_total.setEnabled(false);
        this.jPanelTablaArticulo.setVisible(false);
        
        this.bt_agregar.setEnabled(false);
        this.bt_buscarArticulo.setEnabled(false);
        this.bt_agregar_proveedor.setEnabled(false);
        
         this.txt_hora.setText(null);
         this.txt_fecha.setText(null);
         this.txt_id_compraCab.setText(null);
         
         this.jTableListarTodos.setEnabled(false);
         ListarTodosArticulosTabla();
         
         
         this.bt_agregar_todos.setEnabled(false);
         this.bt_eliminar.setEnabled(false);
         
         this.txt_generalTotal.setText(null);
         this.bt_guardar.setEnabled(false);
      
    }
    public void agregar(){
        this.jPanelBuscadorPorNombre.setVisible(true);
        this.txt_apellido_funcionario.setText(null);
        this.txt_nombre_funcionario.setText(null);
        this.txt_id_funcionario.setText(null);
        this.txt_buscadorPorNombreFuncionario.setText(null);
        this.cargarTablaFuncionario();
        this.jPanelBuscadorPorNombre.setVisible(true);
        this.txt_buscadorPorNombreFuncionario.requestFocus();
        this.bt_agregar.setEnabled(false);
        this.jPanelDatosFuncionarios.setVisible(false);
        //Fin Funcionario
        
       
      //  this.cargarTablaProveedor();
    
    }
    
   
    
     public void buscadorPorNombreFuncionarioTabla(){
      try{
        st.beginTransaction();
      String porNombreFuncionario =this.txt_buscadorPorNombreFuncionario.getText();
    
      List<Funcionario> lista =(List<Funcionario>)st.createQuery("FROM Funcionario WHERE nombre_funcionario LIKE '%"+porNombreFuncionario+"%'" ).list();
      
      for(Funcionario fun : lista){
            String nomApe = fun.getNombre_funcionario()+ " " + fun.getApellido_funcionario();
          
            model.addRow(new Object[]{
                fun.getId_funcionario(),
                nomApe
             
            });
        }
     }catch(Exception e){
        JOptionPane.showMessageDialog(null,"Debes rellenar el campo buscar por nombre");  
     }
     this.obtenerFuncionaro();
    }
     public void obtenerFuncionaro(){
        if(this.jTable1.isEnabled()){
            st.beginTransaction();
            int selectedRow = this.jTable1.getSelectedRow();
            int idFunc = Integer.parseInt(String.valueOf(model.getValueAt(selectedRow, 0)));
            Funcionario func = (Funcionario)st.load(Funcionario.class,idFunc);
            this.txt_id_funcionario.setText(String.valueOf(func.getId_funcionario()));
            this.txt_nombre_funcionario.setText(func.getNombre_funcionario());
            this.txt_apellido_funcionario.setText(func.getApellido_funcionario());
           
        }
    }
     
   
     public void defaultTableModelFuncionario(){
        this.jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
        this.jTable1.getColumnModel().getColumn(1).setPreferredWidth(250);
        //La variable model es de clase, podremos utilizar en cualquier mÃ©todo.
       //Nos permitira agregar, editar y eliminar datos de la tabla.
        model = (DefaultTableModel)this.jTable1.getModel();
        model.setNumRows(0);
    }
     
     
     public void limpiarCampofuncionario (){
         this.txt_apellido_funcionario.setText(null);
         this.txt_id_funcionario.setText(null);
         this.txt_nombre_funcionario.setText(null);
     }
     
     public void cargarTablaFuncionario(){
        this.limpiartablaFuncionario();
        st.beginTransaction();
        List<Funcionario> lista =(List<Funcionario>)st.createQuery("From Funcionario").list();
        for(Funcionario func : lista){
            String nomApe = func.getNombre_funcionario()+ " " + func.getApellido_funcionario();
            model.addRow(new Object[]{
                func.getId_funcionario(),nomApe,func.getDireccion_funcionario(),func.getTelefono_funcionario(),func.getCargo_funcionario()
            });
        }
    }

 /*##############################################ARTICULOS############################################################################################*/    
     
     
     public void buscarArticulo(){
          try{
        st.beginTransaction();
      String porDescripcion =this.txt_BuscarPorDescripcion.getText();
    
      List<Articulo> lista =(List<Articulo>)st.createQuery("FROM Articulo WHERE des_articulo LIKE '%"+porDescripcion+"%'" ).list();
      
      for(Articulo ar :lista){
            modelArticulo.addRow(new Object[]{
             ar.getId_articulo(),
             ar.getDes_articulo(),
             ar.getP_compra(),
             ar.getCantidad()
            });
        }
     }catch(Exception e){
        JOptionPane.showMessageDialog(null,"Debes rellenar el campo buscar por nombre");  
     }
     this.obtenerArticulo();
    }
     public void cargarTablaArticulo(){
        this.limpiartablaArticulo();
        st.beginTransaction();
        List<Articulo> lista =(List<Articulo>)st.createQuery("From Articulo").list();
        for(Articulo ar : lista){
            modelArticulo.addRow(new Object[]{
            ar.getId_articulo(),
            ar.getDes_articulo(),
            ar.getP_compra(),
            ar.getCantidad()
            });
        }
    } 
     public void defaultTableModelArticulo(){
        this.jTable3.getColumnModel().getColumn(0).setPreferredWidth(5);
        this.jTable3.getColumnModel().getColumn(1).setPreferredWidth(100);
          this.jTable3.getColumnModel().getColumn(2).setPreferredWidth(25);
           this.jTable3.getColumnModel().getColumn(3).setPreferredWidth(25);
        //La variable model es de clase, podremos utilizar en cualquier mÃ©todo.
       //Nos permitira agregar, editar y eliminar datos de la tabla.
        modelArticulo = (DefaultTableModel)this.jTable3.getModel();
        modelArticulo.setNumRows(0);
    }
     
     public void obtenerArticulo(){
        if(this.jTable3.isEnabled()){
            st.beginTransaction();
            int selectedRow = this.jTable3.getSelectedRow();
            int idArt = Integer.parseInt(String.valueOf(modelArticulo.getValueAt(selectedRow, 0)));
            Articulo ar = (Articulo)st.load(Articulo.class,idArt);
            this.txt_id_articulo.setText(String.valueOf(ar.getId_articulo()));
            this.txt_descripcion.setText(ar.getDes_articulo());
            this.txt_precio_de_compra.setText(String.valueOf(ar.getP_compra()));
            this.txt_can.setText(String.valueOf(ar.getCantidad()));
            
         
          
        }
    }
      public void agregar_articulo(){
        this.jPanelTablaArticulo.setVisible(true);
        this.txt_descripcion.setText(null);
        this.txt_precio_de_compra.setText(null);
        this.txt_id_articulo.setText(null);
        this.txt_cantidad.setText(null);
       
        this.txt_BuscarPorDescripcion.setText(null);
       this.cargarTablaArticulo();
     //  this.defaultTableModelArticulo();
       
        this.txt_BuscarPorDescripcion.requestFocus();
        this.bt_buscarArticulo.setEnabled(false);
        this.jPanelDatosArticulos.setVisible(false);
        
       
   }
      
      public void calcularParcial(){
    //Lo siguiente nos permite calcular el total para cada artÃ­culo,
    //esto tomando en cuenta total de compra y precio de compra.
    int canCompra = 0;
    int pCompra = 0;
    int totalParcial = 0 ;
    try {
        canCompra = Integer.parseInt(this.txt_cantidad.getText());
        pCompra = Integer.parseInt(this.txt_precio_de_compra.getText());       
           totalParcial = canCompra * pCompra;
           this.txt_total.setText(String.valueOf(totalParcial)); 
         //  this.bt_buscarArticulo.requestFocus();
           
            this.bt_buscarArticulo.setEnabled(false);
            this.bt_agregar_todos.requestFocus();
           
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Se requiere datos numÃ©rico.");
    }
}
  public void ListarTodosArticulosTabla(){
    //Configuramos el jTable utilizando DefaultTableModel
    this.jTableListarTodos.getColumnModel().getColumn(0).setPreferredWidth(15);
    this.jTableListarTodos.getColumnModel().getColumn(1).setPreferredWidth(150);
    this.jTableListarTodos.getColumnModel().getColumn(2).setPreferredWidth(80);
    this.jTableListarTodos.getColumnModel().getColumn(3).setPreferredWidth(50);
    this.jTableListarTodos.getColumnModel().getColumn(4).setPreferredWidth(80);
   modelArticuloTodos = (DefaultTableModel)this.jTableListarTodos.getModel();
    modelArticuloTodos.setNumRows(0);
}  
   public void nuevo(){
        obtenetID();
        Calendar cal = Calendar.getInstance();
        String calString = retornarString(cal);
        String calHora = retornarStringHora(cal);
        this.txt_fecha.setText(calString);
        this.txt_id_compraCab.setText(String.valueOf(numCompra));    
        this.txt_hora.setText(calHora);
        this.bt_agregar.setEnabled(true);
        this.bt_buscarArticulo.setEnabled(true);
        this.bt_agregar_proveedor.setEnabled(true);
        this.jTableListarTodos.setEnabled(true);
        this.bt_agregar_todos.setEnabled(false);
        this.bt_eliminar.setEnabled(false);
        
        this.bt_agregar_todos.setEnabled(true);
        this.bt_eliminar.setEnabled(true);
        this.bt_agregar.requestFocus();
        this.bt_guardar.setEnabled(true);
        
   }
      
     // metodo que limpia tabla antes de buscar los datos en la base de datos   
  public void limpiartablaFuncionario(){
      int a =model.getRowCount()-1;
         for(int i=a; i>=0; i--){
           model.removeRow(i );
      }
  }
  
   
   public void limpiartablaArticulo(){
      int a =modelArticulo.getRowCount()-1;
         for(int i=a; i>=0; i--){
           modelArticulo.removeRow(i );
      }
  }
  
  public String retornarString(Calendar fecha){
        //MÃ©dodo que se le para un objeto calendar y la combierte en formato String-Fecha
        String retorno=null;
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        if (fecha != null) {
        retorno = sdf.format(fecha.getTime());
        }
        return retorno;
}
public String retornarStringHora(Calendar fecha){
        //MÃ©dodo que se le para un objeto calendar y la combierte en formato String-hora
        String retorno=null;
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        if (fecha != null) {
        retorno = sdf.format(fecha.getTime());
        }
        return retorno;
}    
public Calendar retornarCalendar(String fecha){
        //Se le pasa como argumento un String-Fecha y la combierte en objeto calendar.
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Calendar cal = Calendar.getInstance();    
        try {
            cal.setTime(sdf.parse(fecha));
        } catch (ParseException ex) {
          JOptionPane.showMessageDialog(null, "Error; compruebe formato de fecha: " + ex);  
        }
        return cal;
    }
    public void obtenetID(){
    //Utilizamos el mÃ©todo siguiente para conseguir en nÃºmero de compra...
    //correspondiente
    numCompra = 0;
    List<CompraCab> lista = (List<CompraCab>)st.createQuery("From CompraCab").list();
    for (Iterator<CompraCab> it = lista.iterator(); it.hasNext();) {
        CompraCab compraCab = it.next();
        numCompra = compraCab.getId_compraCab() + 1;
    }
    if(numCompra==0){
        numCompra=1;
    } 
}
    
    public void agregar_a_tabla(){
    //MÃ©todo llamado desde el botÃ³n agregar, primeramente comprobamos que los datos sean correctos,
    //que los campos no esten vacios, que no se repitan datos.
    if(this.txt_id_funcionario.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Seleccione un funcionario.");
    }
    else{
        if(this.txt_id_proveedor.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Seleccione un proveedor.");
        }
        else{
            if(this.txt_id_articulo.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Seleccione un articulo.");
            }
            else{
                if(this.txt_cantidad.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Indique una cantidad.");
                    this.txt_cantidad.requestFocus();
                    
                }
                else{
                    
                    
                    verificar();
                    if(var>=1){
                        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "ArtÃ­culo ya Agregado. Desea sumar la cantidad.", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
                         this.bt_buscarArticulo.setEnabled(true);
                        if(showConfirmDialog==0){
                           
                            sumarRepetido(); 
                           calcular();
                          
                           confimAgregar();
                           limpiar();
                        }
                        else{
                            limpiar();
                            this.txt_id_articulo.requestFocus();
                        }
                    }
                    else{
                            modelArticuloTodos.addRow(new Object[]{
                            this.txt_id_articulo.getText(),
                            this.txt_descripcion.getText(),
                            this.txt_precio_de_compra.getText(),
                            this.txt_cantidad.getText(),
                            this.txt_total.getText()
                            });                    
                            calcular();
                            confimAgregar();
                            limpiar(); 
                    }
                    
                }
            }
        }
    }
    this.txt_cantidad.setEnabled(false);
}
    
    public void eliminar(){
    //Permite al usuario seleccionar una fila especÃ­fica de la table y eliminarla.
    if(this.jTableListarTodos.getSelectedRow()==-1){
      JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila de la tabla.");  
    }
    else{
        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Eliminar fila seleccionada.", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
        if(showConfirmDialog == 0){
            int sel = this.jTableListarTodos.getSelectedRow();
            modelArticuloTodos.removeRow(sel);
            this.bt_buscarArticulo.requestFocus();
            this.txt_generalTotal.setText(null);
        }
        else{
             this.bt_buscarArticulo.requestFocus();
        }
    }
}
  public void limpiar(){
    //Limpia campo de datos..
    this.txt_id_articulo.setText(null);
    this.txt_descripcion.setText(null);
    this.txt_precio_de_compra.setText(null);
    this.txt_can.setText(null);
    this.txt_cantidad.setText(null);
    this.txt_total.setText(null);
    this.txt_id_funcionario.setEnabled(false);
    this.txt_id_proveedor.setEnabled(false);
}  
    public void verificar(){
    //MÃ©todo para verificar que no se duplique el mismo artÃ­culo en la tabla,
    //para ello se comprueba el id del artÃ­culo.
    var = 0;
    int idAr = Integer.parseInt(this.txt_id_articulo.getText());
    if(this.jTableListarTodos.getRowCount()>=1){
        for (int i = 0; i < this.jTableListarTodos.getRowCount(); i++) {
            Object valueAt = modelArticuloTodos.getValueAt(i, 0);
            int parseInt = Integer.parseInt(valueAt.toString());
            if(idAr == parseInt){
                var = 1;
                idArtt = i;
            }        
        }        
    }  
}
    public void sumarRepetido(){
        //Si se repite el ingreso de un artÃ­culo especÃ­fico,se puede obtar por sumar la cantidad de compra,
        //este mÃ©todo localizar el id del artÃ­culo especÃ­fico y aumenta la cantidad de la
        //compra sumandola.
        int artCant = Integer.parseInt(this.txt_cantidad.getText());
        int artTotal = Integer.parseInt(this.txt_total.getText());
        Object valueAt = modelArticuloTodos.getValueAt(idArtt, 3);
        Object valueAt1 = modelArticuloTodos.getValueAt(idArtt, 4);
        int cantArt = Integer.parseInt(valueAt.toString());
        int totalArt = Integer.parseInt(valueAt1.toString());
        int x = artCant + cantArt;
        int y = artTotal + totalArt;
            modelArticuloTodos.setValueAt(x, idArtt, 3);
            modelArticuloTodos.setValueAt(y, idArtt, 4);        
}
    public void calcular(){
    //MÃ©todo para calcular el total de la compra, obteniendo datos del jtable.
    int totalG = 0;
    for (int i = 0; i < this.jTableListarTodos.getRowCount(); i++) {
        Object valueAt = modelArticuloTodos.getValueAt(i, 4);
        totalG += Integer.parseInt(valueAt.toString());
    }
    this.txt_generalTotal.setText(String.valueOf(totalG));
     
   
}
    
    public void confimAgregar(){
    //MÃ©todo que pregunta al usuario si desea agregar mÃ¡s artÃ­culo a la lista.
        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Agregar mÃ¡s Articulos.", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
          this.bt_buscarArticulo.setEnabled(true);
        if(showConfirmDialog == 0){
            this.txt_id_articulo.requestFocus();
        }
        else{
            this.bt_guardar.requestFocus();
        }
        
}
public void guardar(){
    //Metodo que nos permite almacenar los datos intruducidos en la base de datos,
    //los datos se guardan en la tabla CompraCab y CompraDet.
    //la primera almacena la cabecera de compra y la segunda los detalles.
    if(this.txt_id_funcionario.getText().isEmpty() ||this.txt_id_proveedor.getText().isEmpty() ){
        JOptionPane.showMessageDialog(null, "Faltan datos para guardar. Verifique.");
    }
    else{
        if(this.jTableListarTodos.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "No hay datos para guardar.");
        }
        else{
            int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Desea guardar esta compra.", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
            if(showConfirmDialog == 0){
                try {
                    st.beginTransaction();
                    CompraCab compra = new CompraCab();
                    int idFun = Integer.parseInt(this.txt_id_funcionario.getText());
                    int idPrv = Integer.parseInt(this.txt_id_proveedor.getText());
                    long totalCompra = Long.parseLong(this.txt_total.getText());
                    Funcionario funcionario = (Funcionario)st.load(Funcionario.class, idFun);
                    Proveedor proveedor = (Proveedor)st.load(Proveedor.class, idPrv);
                    Calendar fechaCompra = retornarCalendar(this.txt_fecha.getText());
                    String horaCompra = this.txt_hora.getText();
                   
                    
                    compra.setId_compraCab(Integer.valueOf(this.txt_id_compraCab.getText()));
                    compra.setProveedor(proveedor);
                    compra.setFuncionario(funcionario);
                    compra.setFecha(fechaCompra);
                    compra.setHora(horaCompra);
                    compra.setTotal(totalCompra);
                    funcionario.getCompraCabs().add(compra);
                            
                          
                    proveedor.getCompracabs().add(compra);
                    
                    int rowCount = this.jTableListarTodos.getRowCount();
                    int[] idArti = new int[rowCount];
                    int[] cantCompra = new int[rowCount];
                    for (int i = 0; i < this.jTableListarTodos.getRowCount(); i++) {
                       
                        
                        CompraDet detalleCompra = new CompraDet();
                        
                        
                        int idArticulo = Integer.parseInt(String.valueOf(modelArticuloTodos.getValueAt(i, 0)));
                        idArti[i] = idArticulo;
                        Articulo ventaArticulo = (Articulo)st.load(Articulo.class, idArticulo);
                        int cantidadCompra = Integer.parseInt(String.valueOf(modelArticuloTodos.getValueAt(i, 3)));
                        cantCompra[i]= cantidadCompra;
                        int importeVenta = Integer.parseInt(String.valueOf(modelArticuloTodos.getValueAt(i, 4)));
                        
                        detalleCompra.setArticulo(ventaArticulo);
                        detalleCompra.setCantidad_compradet(cantidadCompra);  
                        detalleCompra.setImporte(importeVenta);
                        detalleCompra.setCompracab(compra);   
                        compra.getCompraDets().add(detalleCompra);
                    }
                    st.save(compra);
                    st.getTransaction().commit();
                    
                    System.out.println("ESTO");
                    for (int i = 0; i < idArti.length; i++) {
                        actualizarStrock(cantCompra[i], idArti[i]);
                        
                         System.out.println("ESTO"+cantCompra[i]);
                    }
                    arranque();
                    JOptionPane.showMessageDialog(null, "Compra guardada correctamente.");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error guardando compra. Verifique.");
                    
                   
                } 
                
            }
            else{                
              //  this.idArt.requestFocus();
                
                this.txt_id_articulo.requestFocus();
                
                  
            }
            
        }
    }
}
   
    
    public void actualizarStrock(int cantidadCompra, int idArticulo){
    //DespÃºes que el proceso de guardado se de de forma correcta, 
    //se actualizar el stock de los artÃ­culos comprados.
    st.beginTransaction();
    Articulo actualizar = (Articulo)st.load(Articulo.class, idArticulo);
    int temp = actualizar.getCantidad() + cantidadCompra;
    actualizar.setCantidad(temp);
    st.update(actualizar);
    st.getTransaction().commit();
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_agregar;
    private javax.swing.JButton bt_agregar_proveedor;
    private javax.swing.JButton bt_agregar_todos;
    private javax.swing.JButton bt_buscarArticulo;
    private javax.swing.JButton bt_cancelar;
    private javax.swing.JButton bt_eliminar;
    private javax.swing.JButton bt_guardar;
    private javax.swing.JButton bt_nuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelBuscadorPorNombre;
    private javax.swing.JPanel jPanelBuscadorPorNombreProveedor;
    private javax.swing.JPanel jPanelDatosArticulos;
    private javax.swing.JPanel jPanelDatosFuncionarios;
    private javax.swing.JPanel jPanelDatosProveedor;
    private javax.swing.JPanel jPanelTablaArticulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTableListarTodos;
    private javax.swing.JTextField txt_BuscarPorDescripcion;
    private javax.swing.JTextField txt_apellido_funcionario;
    private javax.swing.JTextField txt_buscadorPorNombreFuncionario;
    private javax.swing.JTextField txt_buscadorPorNombreProveedor;
    private javax.swing.JTextField txt_can;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_direccion_proveedor;
    private javax.swing.JTextField txt_fecha;
    private javax.swing.JLabel txt_generalTotal;
    private javax.swing.JTextField txt_hora;
    private javax.swing.JTextField txt_id_articulo;
    private javax.swing.JTextField txt_id_compraCab;
    private javax.swing.JTextField txt_id_funcionario;
    private javax.swing.JTextField txt_id_proveedor;
    private javax.swing.JTextField txt_nombre_funcionario;
    private javax.swing.JTextField txt_nombre_proveedor;
    private javax.swing.JTextField txt_precio_de_compra;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables

    /*
     #####################################################################
     #####################################################################
     ########   TODOS LAS METODOS RELACIONADO PROVEEDORES   ##############
     #####################################################################
     */
    
    public void agregar_proveedor(){
        this.jPanelBuscadorPorNombreProveedor.setVisible(true);
        this.txt_direccion_proveedor.setText(null);
        this.txt_nombre_proveedor.setText(null);
        this.txt_id_proveedor.setText(null);
       
        this.txt_buscadorPorNombreProveedor.setText(null);
       this.cargarTablaProveedor();
      // this.defaultTableModelProveedor();
       // this.cargarTablaProveedor();
        this.txt_buscadorPorNombreProveedor.requestFocus();
        this.bt_agregar_proveedor.setEnabled(false);
        this.jPanelDatosProveedor.setVisible(false);
   }
     
     public void limpiartablaProveedor(){
      int a =modelproveedor.getRowCount()-1;
         for(int i=a; i>=0; i--){
           modelproveedor.removeRow(i );
      }
  }
     public void cargarTablaProveedor(){
       
       
        this.limpiartablaProveedor();
        st.beginTransaction();
        List<Proveedor> lista =(List<Proveedor>)st.createQuery("From Proveedor").list();
        for(Proveedor pro : lista){
          
            modelproveedor.addRow(new Object[]{
               pro.getId_proveedor(),
               pro.getDes_proveedor(),
               pro.getDireccion_proveedor()
            });
        }
    }

    private void buscadorPorNombreProveedorTabla() {
        try{
        st.beginTransaction();
      String porNombre =this.txt_buscadorPorNombreProveedor.getText();
    
      List<Proveedor> lista =(List<Proveedor>)st.createQuery("FROM Proveedor WHERE des_proveedor LIKE '%"+porNombre+"%'" ).list();
      
      for(Proveedor pro : lista){
            modelproveedor.addRow(new Object[]{
                pro.getId_proveedor(),
                pro.getDes_proveedor(),
                pro.getDireccion_proveedor()
              
            });
        }
     }catch(Exception e){
        JOptionPane.showMessageDialog(null,"Debes rellenar el campo buscar por nombre");  
     }
     this.cargarProveedor();;
    }
    
    public void cargarProveedor(){
   
        if(this.jTable2.isEnabled()){
            // se Obtiene la fila seleccionada.
          int selectedRow = this.jTable2.getSelectedRow();
          // se Obtiene el id del registro que esta en la columna "0".
          int idProv = Integer.parseInt(String.valueOf(modelproveedor.getValueAt(selectedRow,0)));
          //se utiliza un load para cargar el objeto.
          Proveedor prov = (Proveedor)st.load(Proveedor.class, idProv);
          // para cargar el objeto se puede utizar los get.
          this.txt_id_proveedor.setText(String.valueOf(prov.getId_proveedor()));
          this.txt_nombre_proveedor.setText(prov.getDes_proveedor());
          this.txt_direccion_proveedor.setText(prov.getDireccion_proveedor());
         
        }
    }

    private void defaultTableModelProveedor() {
       this.jTable2.getColumnModel().getColumn(0).setPreferredWidth(5);
        this.jTable2.getColumnModel().getColumn(1).setPreferredWidth(150);
         this.jTable2.getColumnModel().getColumn(2).setPreferredWidth(150);
        //La variable model es de clase, podremos utilizar en cualquier mÃ©todo.
       //Nos permitira agregar, editar y eliminar datos de la tabla.
        modelproveedor = (DefaultTableModel)this.jTable2.getModel();
        modelproveedor.setNumRows(0);
    }
}
