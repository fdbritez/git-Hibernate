/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.app;
import com.entidad.Cliente;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.management.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.hibernate.Session;
import util.HibernateUtil;
import javax.swing.UIManager;

/**
 *
 * @author fdbritez
 */
public final class ClienteApp extends javax.swing.JDialog {
    private Session hibernateUtil;

    /**
     * Creates new form ClienteApp
     */
    public ClienteApp(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        hibernateSession();
        this.arranque();       
    }
    private Session st;
    private DefaultTableModel model ;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_id_cliente = new javax.swing.JTextField();
        txt_nombre_cliente = new javax.swing.JTextField();
        txt_direccion_cliente = new javax.swing.JTextField();
        txt_telefono_cliente = new javax.swing.JTextField();
        txt_ruc_cliente = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabelPorNombre = new javax.swing.JLabel();
        txt_buscadorPorNombre = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabelPorRuc = new javax.swing.JLabel();
        txt_buscadorPorRuc = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        bt_nuevo = new javax.swing.JButton();
        bt_guardar = new javax.swing.JButton();
        bt_editar = new javax.swing.JButton();
        bt_eliminar = new javax.swing.JButton();
        bt_informe = new javax.swing.JButton();
        bt_cancelar = new javax.swing.JButton();
        bt_buscar = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FOTMULARIO DE CLIENTES");
        setMaximumSize(new java.awt.Dimension(626, 538));
        setMinimumSize(new java.awt.Dimension(626, 538));
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/userr.png"))); // NOI18N
        jLabel1.setText("FORMULARIO DE CLIENTES");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("ID");

        jLabel3.setText("Nombre:");
        jLabel3.setToolTipText("");

        jLabel4.setText("Dirección:");

        jLabel5.setText("Teléfono:");

        jLabel6.setText("RUC:");

        txt_nombre_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombre_clienteKeyTyped(evt);
            }
        });

        txt_direccion_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_direccion_clienteKeyTyped(evt);
            }
        });

        txt_telefono_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_telefono_clienteKeyTyped(evt);
            }
        });

        txt_ruc_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_ruc_clienteKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_id_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_telefono_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_ruc_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_direccion_cliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                                .addComponent(txt_nombre_cliente, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_id_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombre_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_direccion_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_ruc_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txt_telefono_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelPorNombre.setText("POR NOMBRE:");

        txt_buscadorPorNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_buscadorPorNombreKeyPressed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "DESCRIPCION", "DIRECCION", "TELEFONO", "RUC"
            }
        ));
        jTable2.setGridColor(new java.awt.Color(0, 153, 255));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabelPorRuc.setText("POR RUC:");

        txt_buscadorPorRuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscadorPorRucActionPerformed(evt);
            }
        });
        txt_buscadorPorRuc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_buscadorPorRucKeyPressed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bt_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/New.png"))); // NOI18N
        bt_nuevo.setText("Nuevo");
        bt_nuevo.setActionCommand("bt_nuevo");
        bt_nuevo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_nuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_nuevo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bt_nuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_nuevoActionPerformed(evt);
            }
        });

        bt_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Save.png"))); // NOI18N
        bt_guardar.setText("Guardar");
        bt_guardar.setActionCommand("bt_guardar");
        bt_guardar.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_guardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_guardar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bt_guardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_guardarActionPerformed(evt);
            }
        });

        bt_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/edit.png"))); // NOI18N
        bt_editar.setText("Editar");
        bt_editar.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_editar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_editar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bt_editar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editarActionPerformed(evt);
            }
        });

        bt_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Trashcan_empty.png"))); // NOI18N
        bt_eliminar.setText("Eliminar");
        bt_eliminar.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_eliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_eliminar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bt_eliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminarActionPerformed(evt);
            }
        });

        bt_informe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Tasks.png"))); // NOI18N
        bt_informe.setText("Informe");
        bt_informe.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_informe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_informe.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bt_informe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_informe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_informeActionPerformed(evt);
            }
        });

        bt_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/cancel32.png"))); // NOI18N
        bt_cancelar.setText("Cancelar");
        bt_cancelar.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_cancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_cancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bt_cancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_cancelarActionPerformed(evt);
            }
        });

        bt_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Search (2).png"))); // NOI18N
        bt_buscar.setText("Buscar");
        bt_buscar.setActionCommand("bt_buscar");
        bt_buscar.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        bt_buscar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bt_buscar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bt_buscar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(bt_nuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_guardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_editar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bt_eliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_buscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_informe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_cancelar)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bt_nuevo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bt_guardar)
                            .addComponent(bt_editar)
                            .addComponent(bt_informe)
                            .addComponent(bt_cancelar)
                            .addComponent(bt_eliminar))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_buscar)
                        .addGap(19, 19, 19))))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabelPorRuc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_buscadorPorRuc)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelPorNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_buscadorPorNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPorNombre)
                    .addComponent(txt_buscadorPorNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPorRuc)
                    .addComponent(txt_buscadorPorRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_cancelarActionPerformed
       this.arranque();
    }//GEN-LAST:event_bt_cancelarActionPerformed

    private void bt_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_nuevoActionPerformed
       this.nuevo();
    }//GEN-LAST:event_bt_nuevoActionPerformed

    private void bt_informeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_informeActionPerformed
       this.informe();
       this.arranque();
    }//GEN-LAST:event_bt_informeActionPerformed

    private void bt_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_guardarActionPerformed
       this.guardarUnos();
      //  this.guardarElseIf();
    }//GEN-LAST:event_bt_guardarActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
       this.cargarCliente_formulario();
    }//GEN-LAST:event_jTable2MouseClicked

    private void bt_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editarActionPerformed
        this.editar();
    }//GEN-LAST:event_bt_editarActionPerformed

    private void bt_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminarActionPerformed
       this.eliminar();
    }//GEN-LAST:event_bt_eliminarActionPerformed

    private void txt_buscadorPorNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscadorPorNombreKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
         cargarTableCliente();
            try{
                 if(this.txt_buscadorPorNombre.getText().isEmpty()){
                     JOptionPane.showMessageDialog(null,"Debes rellenar el campo buscar por NOMBRE");
                 this.txt_buscadorPorNombre.requestFocus();
               }else{
                 this.limpiartabla();
                 this.buscadorPorNombreTabla();  
                }
                
       }catch(Exception e){
           
       }
      }
    }//GEN-LAST:event_txt_buscadorPorNombreKeyPressed

    private void txt_buscadorPorRucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscadorPorRucActionPerformed
     
    }//GEN-LAST:event_txt_buscadorPorRucActionPerformed

    private void txt_buscadorPorRucKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscadorPorRucKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
         cargarTableCliente();
            try{
                 if(this.txt_buscadorPorRuc.getText().isEmpty()){
                     JOptionPane.showMessageDialog(null,"Debes rellenar el campo buscar por RUC");
                 this.txt_buscadorPorRuc.requestFocus();
               }else{
                    this.limpiartabla();
                    this.buscadorPorRucTabla();
                }    

              
       }catch(Exception e){
           
       }
      }
    }//GEN-LAST:event_txt_buscadorPorRucKeyPressed
 
    private void bt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscarActionPerformed
       this.bt_buscar(); 
        this.setSize(626,570);
    }//GEN-LAST:event_bt_buscarActionPerformed

    private void txt_nombre_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombre_clienteKeyTyped
        String Caracteres = this.txt_nombre_cliente.getText();
        if(Caracteres.length()>=60){
            evt.consume();
        }
    }//GEN-LAST:event_txt_nombre_clienteKeyTyped

    private void txt_telefono_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_telefono_clienteKeyTyped
       this.soloNumeros(evt);
        String Caracteres = this.txt_telefono_cliente.getText();
        if(Caracteres.length()>=30){
            evt.consume();
        }
    }//GEN-LAST:event_txt_telefono_clienteKeyTyped

    private void txt_ruc_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ruc_clienteKeyTyped
       String Caracteres = this.txt_ruc_cliente.getText();
        if(Caracteres.length()>=30){
            evt.consume();
        }
    }//GEN-LAST:event_txt_ruc_clienteKeyTyped

    private void txt_direccion_clienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_direccion_clienteKeyTyped
     String Caracteres = this.txt_direccion_cliente.getText();
        if(Caracteres.length()>=60){
            evt.consume();
        }
    }//GEN-LAST:event_txt_direccion_clienteKeyTyped
 public void soloNumeros(KeyEvent evt){
      char car = evt.getKeyChar();
       if((car <'0' || car >'9'))
         evt.consume();
  }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
         
                
             ClienteApp dialog = new ClienteApp(new javax.swing.JFrame(), true);        
            //Cambiamos de estilo a nuestra aplicacion.
           
             dialog.addWindowListener(new java.awt.event.WindowAdapter() {
               
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
              
                });
              
                dialog.setVisible(true);

            }
          
        });
    }
 
    public void hibernateSession(){
        st = HibernateUtil.getSessionFactory().openSession();
    }
    
   
    
    public void arranque(){
        this.txt_id_cliente.setEnabled(false);
        this.txt_id_cliente.setText(null);
        this.txt_nombre_cliente.setEnabled(false);
        this.txt_nombre_cliente.setText(null);
        this.txt_direccion_cliente.setEnabled(false);
        this.txt_direccion_cliente.setText(null);
        this.txt_telefono_cliente.setEnabled(false);
        this.txt_telefono_cliente.setText(null);
        this.txt_ruc_cliente.setEnabled(false);
        this.txt_ruc_cliente.setText(null);
        this.bt_nuevo.setEnabled(true);
        this.bt_guardar.setText("Guardar");
        this.bt_guardar.setEnabled(false);
        this.bt_editar.setEnabled(false);
        this.bt_eliminar.setEnabled(false);
        this.jTable2.setEnabled(true);
        this.tableModelCliente();
        this.cargarTableCliente();
        this.jLabelPorNombre.setEnabled(false);
        this.jLabelPorRuc.setEnabled(false);
        this.txt_buscadorPorRuc.setEnabled(false);
        this.txt_buscadorPorNombre.setEnabled(false);
        this.jLabelPorRuc.setVisible(false);
        this.jLabelPorNombre.setVisible(false);
        this.txt_buscadorPorRuc.setVisible(false);
        this.txt_buscadorPorNombre.setVisible(false);
        this.bt_buscar.setEnabled(true);
        this.setSize(626,538);
        
        this.bt_cancelar.setEnabled(true);
      
    }
    
    public void nuevo(){
        this.txt_id_cliente.setText("Auto");
        this.txt_nombre_cliente.setEnabled(true);
        this.txt_nombre_cliente.setText(null);
        this.txt_nombre_cliente.requestFocus();
        this.txt_direccion_cliente.setEnabled(true);
        this.txt_direccion_cliente.setText(null);
        this.txt_telefono_cliente.setEnabled(true);
        this.txt_telefono_cliente.setText(null);
        this.txt_ruc_cliente.setEnabled(true);
        this.txt_ruc_cliente.setText(null);
        this.bt_guardar.setEnabled(false);
        this.bt_guardar.setText("Guardar");
        this.bt_guardar.setEnabled(true);
        this.jTable2.setEnabled(false);
        this.bt_buscar.setEnabled(false);
        
        this.txt_buscadorPorRuc.setVisible(false);
        this.txt_buscadorPorNombre.setVisible(false);
        this.jLabelPorNombre.setVisible(false);
        this.jLabelPorRuc.setVisible(false);
        
        this.bt_nuevo.setEnabled(false);
        
     }
    
    public void tableModelCliente(){
        this.jTable2.getColumnModel().getColumn(0).setPreferredWidth(25);
        this.jTable2.getColumnModel().getColumn(1).setPreferredWidth(200);
        this.jTable2.getColumnModel().getColumn(2).setPreferredWidth(120);
        this.jTable2.getColumnModel().getColumn(3).setPreferredWidth(150);
        this.jTable2.getColumnModel().getColumn(4).setPreferredWidth(150);
        model = (DefaultTableModel)this.jTable2.getModel();
        model.setNumRows(0);
    }
    
    
    /*
     public void buscadorPorID(){
      st.beginTransaction();
    
      int porID =Integer.parseInt(this.txt_id_cliente.getText());
      List<Cliente> lista =(List<Cliente>)st.createQuery("FROM Cliente WHERE id_cliente LIKE '%"+porID+"%'" ).list();
      for(Cliente cl : lista){
          System.out.println(cl.getNombre_cliente());
          this.txt_id_cliente.setText(String.valueOf(cl.getId_cliente()));
          this.txt_nombre_cliente.setText(cl.getNombre_cliente());
          this.txt_direccion_cliente.setText(cl.getDireccion_cliente());
          this.txt_ruc_cliente.setText(cl.getRuc());
          this.txt_telefono_cliente.setText(cl.getTelefono_cliente());
         
      }
    }

      public void buscadorPorNombre(){
      st.beginTransaction();
      String porNombre =this.txt_buscadorPorNombre.getText();
      List<Cliente> lista =(List<Cliente>)st.createQuery("FROM Cliente WHERE nombre_cliente LIKE '%"+porNombre+"%'" ).list();
    
      for(Cliente cl : lista){
          this.txt_id_cliente.setText(String.valueOf(cl.getId_cliente()));
          this.txt_nombre_cliente.setText(cl.getNombre_cliente());
          this.txt_direccion_cliente.setText(cl.getDireccion_cliente());
          this.txt_ruc_cliente.setText(cl.getRuc());
          this.txt_telefono_cliente.setText(cl.getTelefono_cliente());
         
      }
    }
      */
      public void buscadorPorRucTabla(){
     
          st.beginTransaction();
      String porRuc =this.txt_buscadorPorRuc.getText();
      List<Cliente> lista =(List<Cliente>)st.createQuery("FROM Cliente WHERE ruc LIKE '%"+porRuc+"%'" ).list();
    
      for(Cliente clie : lista){
            model.addRow(new Object[]{
                clie.getId_cliente(),
                clie.getNombre_cliente(),
                clie.getDireccion_cliente(),
                clie.getTelefono_cliente(),
                clie.getRuc()
            });
        }
         
   }
     
    public void buscadorPorNombreTabla(){
      try{
        st.beginTransaction();
      String porNombre =this.txt_buscadorPorNombre.getText();
    
      List<Cliente> lista =(List<Cliente>)st.createQuery("FROM Cliente WHERE nombre_cliente LIKE '%"+porNombre+"%'" ).list();
       
      for(Cliente clie : lista){
            model.addRow(new Object[]{
                clie.getId_cliente(),
                clie.getNombre_cliente(),
                clie.getDireccion_cliente(),
                clie.getTelefono_cliente(),
                clie.getRuc()
            });
        }
     }catch(Exception e){
        JOptionPane.showMessageDialog(null,"Debes rellenar el campo buscar por nombre");  
     }
     this.cargarCliente_formulario();// carga los datos de la tabla en el formulario para modificar o eliminar.
    } 
    
    // Cuando se inicio el formulario se carga todo los datos en la tabla.
    public void cargarTableCliente(){
        this.limpiartabla();
        st.beginTransaction();
        List<Cliente> lista = (List<Cliente>)st.createQuery("From Cliente").list();
        for(Cliente clie : lista){
            model.addRow(new Object[]{
                clie.getId_cliente(),
                clie.getNombre_cliente(),
                clie.getDireccion_cliente(),
                clie.getTelefono_cliente(),
                clie.getRuc()
            });
        }
    
     }      
    // carga los datos de la tabla en el formulario para modificar o eliminar.
    public void cargarCliente_formulario(){
        if(this.jTable2.isEnabled()){
            int selectedRow = this.jTable2.getSelectedRow();
            int idClie = Integer.parseInt(String.valueOf(model.getValueAt(selectedRow,0)));
            Cliente clie =(Cliente)st.load(Cliente.class, idClie);
            this.txt_id_cliente.setText(String.valueOf(clie.getId_cliente()));    
            this.txt_nombre_cliente.setText(clie.getNombre_cliente());
            this.txt_direccion_cliente.setText(clie.getDireccion_cliente());
            this.txt_ruc_cliente.setText(clie.getRuc());
            this.txt_telefono_cliente.setText(clie.getTelefono_cliente());
            this.bt_editar.setEnabled(true);
            this.bt_eliminar.setEnabled(true);
            this.bt_nuevo.setEnabled(false);   
        }
    }
  
    /*
    int count= jTable.getModel().getRowCount(); 

jTable.getRowCount() devolverá solo el conteo de filas visibles. Entonces, para verificar isEmpty(), entonces es mejor usar getRowCount() en el modelo.

public static boolean isEmpty(JTable jTable) { 
     if (jTable != null && jTable.getModel() != null) { 
      return jTable.getModel().getRowCount()<=0?true:false; 
     } 
     return false; 
    }
    * 
    */
    
    
    public void bt_buscar(){
          this.arranque();
          this.txt_id_cliente.setText(null);
          this.txt_nombre_cliente.setText(null);
          this.txt_direccion_cliente.setText(null);
          this.txt_telefono_cliente.setText(null);
          this.txt_ruc_cliente.setText(null);
          this.txt_buscadorPorNombre.setText(null);
          this.txt_buscadorPorRuc.setText(null);
      try{
        if(this.jTable2.getRowCount()!=0  && this.jTable2.getSelectedRow()!= 0){
        st.beginTransaction();
       
            
            
           this.jLabelPorNombre.setEnabled(true);
           this.jLabelPorRuc.setEnabled(true);
           this.txt_buscadorPorRuc.setEnabled(true);
           this.txt_buscadorPorNombre.setEnabled(true);
           this.jLabelPorRuc.setVisible(true);
           this.jLabelPorNombre.setVisible(true);
           this.txt_buscadorPorRuc.setVisible(true);
           this.txt_buscadorPorNombre.setVisible(true);
           this.txt_buscadorPorRuc.requestFocus();
           this.cargarCliente_formulario();
        
        }else{
          JOptionPane.showMessageDialog(null,"Todavia nose a registrado ningún cliente.");
          this.arranque();
       }   
      }catch(Exception e){
         //JOptionPane.showMessageDialog(null,"Se puede buscar por RUC y por Nombre."); 
      }  
       
    }
    
    /* 
    public void LimpiarTabla(){
       for (int i = 0; i < model.getRowCount(); i++) {
         model.removeRow(i);
         i-=1;
        }
      } 
      */
    
   // metodo que limpia tabla antes de buscar los datos en la base de datos   
  public void limpiartabla(){
      int a =model.getRowCount()-1;
         for(int i=a; i>=0; i--){
           model.removeRow(i );
      }
  }
  
  /// Busca a los cliente por su ID y carga los datos al formulario
/*
  public void buscarClienteID(){
    int idCliente =0;
    try{
        try{
        idCliente=Integer.parseInt(this.txt_id_cliente.getText());
        }catch(Exception e){
          JOptionPane.showMessageDialog(null, "ID debe ser numérico.");
          this.txt_id_cliente.setText(null);
          this.txt_nombre_cliente.setText(null);
          this.txt_id_cliente.requestFocus();
        }
        Cliente clie =(Cliente)st.load(Cliente.class,idCliente);
        this.txt_nombre_cliente.setText(clie.getNombre_cliente());
        
    }catch(Exception e){
      JOptionPane.showMessageDialog(null, "No hay funcionario con ID: " + idCliente); 
      this.txt_id_cliente.setText(null);
      this.txt_nombre_cliente.setText(null);
      this.txt_id_cliente.requestFocus();
    }
}
 */
     public void editar(){
     this.txt_nombre_cliente.setEnabled(true); 
     this.txt_nombre_cliente.requestFocus();
     this.txt_direccion_cliente.setEnabled(true);
     this.txt_ruc_cliente.setEnabled(true);
     this.txt_telefono_cliente.setEnabled(true);
     this.bt_nuevo.setEnabled(false);
     this.bt_eliminar.setEnabled(false);
     this.bt_guardar.setEnabled(true);
     this.bt_guardar.setText("Actualizar");
     this.jTable2.setEnabled(false);
}
  
 
    public void eliminar(){
   int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Eliminación de Registro", "Desea eliminar este registro.", JOptionPane.YES_NO_OPTION);
   if(showConfirmDialog == 1){
       JOptionPane.showMessageDialog(null, "Registro no eliminado.");
   }
   else{
       st.beginTransaction();
       int selectedRow = this.jTable2.getSelectedRow();
       Object valueAt = model.getValueAt(selectedRow, 0);
       int idArt = Integer.parseInt(valueAt.toString());
       Cliente clie = (Cliente)st.load(Cliente.class, idArt);
       st.delete(clie);
       st.getTransaction().commit();
       JOptionPane.showMessageDialog(null, "Registro eliminado.");
       arranque();
   }
  }
 /*   
    public void guardarUno(){
            if(this.txt_nombre_cliente.getText().isEmpty()){
                this.txt_nombre_cliente.requestFocus();
                JOptionPane.showMessageDialog(null,"Falta la descripcion del cliente");
            } else{
                 if((this.txt_direccion_cliente.getText().isEmpty())|| (this.txt_ruc_cliente.getText().isEmpty()) ||(this.txt_telefono_cliente.getText().isEmpty())){
                    this.txt_direccion_cliente.setText("-");
                    this.txt_ruc_cliente.setText("-");
                    this.txt_telefono_cliente.setText("-");
                    this.guardarUno();
                }else{
                     this.guardarDos();
                }    

            }
    }
    * 
    * 
    */
    
    public void guardarUnos(){
     if(this.txt_nombre_cliente.getText().isEmpty()){
                this.txt_nombre_cliente.requestFocus();
                JOptionPane.showMessageDialog(null,"Falta la descripcion del cliente");
     }else{
         if (this.txt_direccion_cliente.getText().isEmpty()){
             this.txt_direccion_cliente.requestFocus();
             JOptionPane.showMessageDialog(null,"Falta la direccion del cliente.");
         }else{
           if(this.txt_ruc_cliente.getText().isEmpty()){
               this.txt_ruc_cliente.requestFocus();
               JOptionPane.showMessageDialog(null,"Falta la RUC del cliente.");
           }else{
             if(this.txt_telefono_cliente.getText().isEmpty()){
                 this.txt_telefono_cliente.requestFocus();
                 JOptionPane.showMessageDialog(null,"Falta la telefono del cliente.");
             }else{
                this.guardarDos(); 
             }
           }
        }
     } 
   }
    /* 
    public void guardarElseIf(){
        if(this.txt_nombre_cliente.getText().isEmpty()){
                this.txt_nombre_cliente.requestFocus();
                JOptionPane.showMessageDialog(null,"Falta el Nombre del cliente.");
        }else if(this.txt_direccion_cliente.getText().isEmpty()){
             this.txt_direccion_cliente.requestFocus();
             JOptionPane.showMessageDialog(null,"Falta la direccion del cliente.");
         }else if(this.txt_ruc_cliente.getText().isEmpty()){
               this.txt_ruc_cliente.requestFocus();
               JOptionPane.showMessageDialog(null,"Falta la RUC del cliente.");
         }else if(this.txt_telefono_cliente.getText().isEmpty()){
               this.txt_telefono_cliente.requestFocus();
               JOptionPane.showMessageDialog(null,"Falta la telefono del cliente.");
          }else{
                this.guardarDos(); 
             }
    }
  */      
    public void guardarDos(){
        if(this.bt_guardar.getText().equals("Guardar")){
            st.beginTransaction();
            Cliente clie = new Cliente();
            clie.setNombre_cliente(this.txt_nombre_cliente.getText());
            clie.setDireccion_cliente(this.txt_direccion_cliente.getText());
            clie.setRuc(this.txt_ruc_cliente.getText());
            clie.setTelefono_cliente(this.txt_telefono_cliente.getText());
            st.save(clie);
            st.getTransaction().commit();
            JOptionPane.showMessageDialog(null,"Registro de cliente guardado.");
            this.cargarTableCliente();
            this.arranque();
            
        }else{
            st.beginTransaction();
            int selectedRow = this.jTable2.getSelectedRow();
            int idClie = Integer.parseInt(String.valueOf(model.getValueAt(selectedRow,0)));
            Cliente clie =(Cliente)st.load(Cliente.class,idClie);
            clie.setNombre_cliente(this.txt_nombre_cliente.getText());
            clie.setDireccion_cliente(this.txt_direccion_cliente.getText());
            clie.setRuc(this.txt_ruc_cliente.getText());
            clie.setTelefono_cliente(this.txt_telefono_cliente.getText());
            st.update(clie);  
            st.beginTransaction().commit();
            JOptionPane.showMessageDialog(null,"Registro de cliente actualizado.");
            this.cargarTableCliente();
            this.arranque();
        }
        
    }
    public void informe(){
    //try - para controlar las excepciones.
    try {
        //Creamos una lista de los datos de la tabla "Cliente" utilizando "List".
        st.beginTransaction();
        List<Cliente> lista = (List<Cliente>)st.createQuery("From Cliente").list();
        //Utilizamos el método siguiente para cargar el reporte "TipoReport.jasper"
        //El "JRLoader.loadObject" es el cargador.
        JasperReport report  = (JasperReport)JRLoader.loadObject(ClassLoader.getSystemResource("com/informes/reportCliente.jasper")); 
        //El método siguiente nos permite pasarle los datos al reporte utilizando JRBeanCollectionDataSource y como argumento la lista que creamos más arriba.
        //La lista posee dos campos por registro: "id" y "des", los nombres se corresponden con las agregadas en el reporte diseñado.
        JasperPrint fillReport = JasperFillManager.fillReport(report, null,new JRBeanCollectionDataSource(lista));
        //El JasperViewer para visualizar, le pasamos como argumento nuestro "fillReport" de arriba.
        JasperViewer jviewer = new JasperViewer(fillReport,false);
        //Le damos un título al reporte.
        jviewer.setTitle("Lista de Clientes.");
        //La hacemos visible.
        jviewer.setVisible(true);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error cargando reporte.");
    }
}

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_buscar;
    private javax.swing.JButton bt_cancelar;
    private javax.swing.JButton bt_editar;
    private javax.swing.JButton bt_eliminar;
    private javax.swing.JButton bt_guardar;
    private javax.swing.JButton bt_informe;
    private javax.swing.JButton bt_nuevo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelPorNombre;
    private javax.swing.JLabel jLabelPorRuc;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txt_buscadorPorNombre;
    private javax.swing.JTextField txt_buscadorPorRuc;
    private javax.swing.JTextField txt_direccion_cliente;
    private javax.swing.JTextField txt_id_cliente;
    private javax.swing.JTextField txt_nombre_cliente;
    private javax.swing.JTextField txt_ruc_cliente;
    private javax.swing.JTextField txt_telefono_cliente;
    // End of variables declaration//GEN-END:variables

   

    
}
